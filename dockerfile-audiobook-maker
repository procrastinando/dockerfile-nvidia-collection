# Use the official NVIDIA base image with CUDA 12.1 support
FROM nvidia/cuda:12.1.0-devel-ubuntu22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.11 \
    python3.11-venv \
    python3.11-dev \
    git \
    wget \
    ffmpeg \
    build-essential \
    curl \
    libsndfile1 \
    && rm -rf /var/lib/apt/lists/*

# Install pip and set Python alternatives
RUN curl -sS https://bootstrap.pypa.io/get-pip.py | python3.11
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1

# Clone the audiobook_maker repository
RUN git clone https://github.com/JarodMica/audiobook_maker.git /opt/audiobook_maker
WORKDIR /opt/audiobook_maker

# Set up virtual environment
RUN python -m venv venv
ENV PATH="/opt/audiobook_maker/venv/bin:$PATH"

# Install basic requirements for the GUI
RUN pip install --upgrade pip && pip install -r requirements.txt

# Pull and update submodules
RUN git submodule init && git submodule update

# Install TortoiseTTS
WORKDIR /opt/audiobook_maker/modules/tortoise_tts_api
RUN git submodule init && git submodule update
RUN pip install modules/tortoise_tts modules/dlas .
WORKDIR /opt/audiobook_maker

# Install StyleTTS 2
WORKDIR /opt/audiobook_maker/modules/styletts-api
RUN git submodule init && git submodule update
RUN pip install modules/StyleTTS2 .
# Install monotonic align
RUN pip install git+https://github.com/resemble-ai/monotonic_align.git
WORKDIR /opt/audiobook_maker

# Install F5-TTS
RUN pip install ./modules/F5-TTS

## Install RVC
#RUN pip install git+https://github.com/facebookresearch/fairseq.git

# Ensure PyTorch with CUDA 12.1 is installed
#RUN pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

# Install fairseq (for development)
RUN git clone https://github.com/pytorch/fairseq.git /opt/fairseq
WORKDIR /opt/fairseq
RUN pip install --editable ./

# Install NVIDIA Apex for faster training
RUN git clone https://github.com/NVIDIA/apex.git /opt/apex
WORKDIR /opt/apex
RUN pip install -v --no-cache-dir --global-option="--cpp_ext" \
    --global-option="--cuda_ext" \
    --global-option="--deprecated_fused_adam" \
    --global-option="--xentropy" \
    --global-option="--fast_multihead_attn" ./

# Install PyArrow for large datasets
RUN pip install pyarrow

# Replace Windows-specific `finish_styletts_install.bat` steps
RUN wget https://github.com/espeak-ng/espeak-ng/releases/download/1.51/espeak-ng-X64.msi -O espeak-ng.msi && \
    apt-get install -y msitools && \
    msiextract -C /usr/local espeak-ng.msi && \
    rm espeak-ng.msi
ENV PHONEMIZER_ESPEAK_LIBRARY="/usr/local/libespeak-ng.so"
ENV PHONEMIZER_ESPEAK_PATH="/usr/local"

# Expose the application entry point
WORKDIR /opt/audiobook_maker
ENTRYPOINT ["/bin/bash"]
